@import "bourbon";

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
// CSS image replacement

@mixin text-hide() {
  font: "0/0" a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}
// alinement

@mixin vert-dtc-m() {
  display: table-cell;
  vertical-align: middle;
}
@mixin vert-dtc-t() {
  display: table-cell;
  vertical-align: top;
}
@mixin vert-dtc-b() {
  display: table-cell;
  vertical-align: bottom;
}
@mixin vert-dib-m() {
  display: inline-block;
  vertical-align: middle;
}
@mixin vert-dib-top() {
  display: inline-block;
  vertical-align: top;
}
// img

@mixin img-resp() {
  width: auto\9;
  max-width: 100%;
  height: auto;
}
@mixin table-responsive() {
  display: block;
  width: 100%;
  overflow-x: auto;
}
// aspect ratio

// @include aspect-ratio (parent-class, child-class)
@mixin aspect-ratio($parent-class, $child-class) {
    .#{$parent-class} {
        position: relative;
        height: 0;
        padding-bottom: 56.25%;
        &__#{$child-class} {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
        }
    }
}
// media

// p {
//   @include xs {
//     font-size: 18px;
//   }
// }

// media max

// @mixin max-xs {
//   @media (max-width: #{$xs-width - 1px}) {
//     @content;
//   }
// }
@mixin max-sm {
  @media (max-width: #{$sm-width - 1px}) {
    @content;
  }
}
@mixin max-md {
  @media (max-width: #{$md-width - 1px}) {
    @content;
  }
}
@mixin max-lg {
  @media (max-width: #{$lg-width - 1px}) {
    @content;
  }
}

// media min

// @mixin xs {
//   @media (max-width: #{$xs-width}) {
//     @content;
//   }
// }
@mixin sm {
  @media (min-width: #{$sm-width}) {
    @content;
  }
}
@mixin md {
  @media (min-width: #{$md-width}) {
    @content;
  }
}
@mixin lg {
  @media (min-width: #{$lg-width}) {
    @content;
  }
}

// media min and max

// @mixin media-xs-sm {
//   @media (min-width: #{$xs-width}) and (max-width: #{$sm-width - 1px}) {
//     @content;
//   }
// }
@mixin media-sm-md {
  @media (min-width: #{$sm-width}) and (max-width: #{$md-width - 1px}) {
    @content;
  }
}
@mixin media-sm-lg {
  @media (min-width: #{$sm-width}) and (max-width: #{$lg-width - 1px}) {
    @content;
  }
}
@mixin media-md-lg {
  @media (min-width: #{$md-width}) and (max-width: #{$lg-width - 1px}) {
    @content;
  }
}
// media custom prop

// p {
//   @include media-min-max (600, 900) {
//     font-size: 18px;
//   }
// }

@mixin media-min ($media-min) {
      @media (min-width: #{$media-min}px) {
        @content;
    }
}
@mixin media-max ($media-max) {
      @media (max-width: #{$media-max - 1}px) {
        @content;
    }
}
@mixin media-min-max ($media-min, $media-max) {
      @media (min-width: #{$media-min}px) and (max-width: #{$media-max - 1}px) {
        @content;
    }
}

// retina

@mixin retina {
  @media
    only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (min--moz-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) {
    @content;
  }
}
//  SVG background

// body {
//   @include background-image('pattern');
// }
@mixin background-image($name, $size:false){
    background-image: url(#{$image-path}/#{$name}.svg);
    @if($size){
        background-size: $size;
    }
    .no-svg &{
        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
          background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}

// clearfix

@mixin clearfix() {
  &::after {
    display: block;
    content: "";
    clear: both;
  }
}
// input placeholder

@mixin placeholder($placeholder-color, $font){
    &::-webkit-input-placeholder {
        color: $placeholder-color;
        font-family:$font-family-base;
    }
    &::-moz-placeholder {
        color: $placeholder-color;
        font-family:$font-family-base;
    }
    &:-ms-input-placeholder {
        color: $placeholder-color;
        font-family:$font-family-base;
    }
    &:-moz-placeholder {
        color: $placeholder-color;
        font-family:$font-family-base;
    }
    &:focus::-webkit-input-placeholder {
      color: transparent!important;
    }
    &:focus::-moz-placeholder {
      color: transparent!important;
    }
    &:focus:-moz-placeholder {
      color: transparent!important;
    }
}
