@import "bourbon";

@mixin size($width, $height: $width) {
      width: $width;
      height: $height;
}
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
// CSS image replacement
@mixin text-hide() {
  font: "0/0" a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}
@mixin img-resp() {
   width: auto\9;
   max-width: 100%;
   height: auto;
}
@mixin table-responsive() {
 display: block;
 width: 100%;
 overflow-x: auto;
}
//  SVG background

// body {
//   @include background-image('pattern');
// }
@mixin background-image($name, $size:false){
    background-image: url(#{$image-path}/#{$name}.svg);
    @if($size){
        background-size: $size;
    }
    .no-svg &{
        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
          background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}
// media

@mixin xs {
  @media (max-width: #{$xs-width}) {
    @content;
  }
}
@mixin xsm {
  @media (min-width: #{$xsm-width}) {
    @content;
  }
}
@mixin sm {
  @media (min-width: #{$sm-width}) {
    @content;
  }
}
@mixin md {
  @media (min-width: #{$md-width}) {
    @content;
  }
}
@mixin lg {
  @media (min-width: #{$lg-width}) {
    @content;
  }
}
@mixin retina {
  @media
    only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (min--moz-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) {
    @content;
  }
}

// p {
//   @include xs {
//     font-size: 18px;
//   }
// }

@mixin media-xs-sm {
  @media (min-width: #{$xs-width}) and (max-width: #{$sm-width - 1px}) {
    @content;
  }
}
@mixin media-xsm-sm {
  @media (min-width: #{$xsm-width}) and (max-width: #{$sm-width - 1px}) {
    @content;
  }
}
@mixin media-sm-md {
  @media (min-width: #{$sm-width}) and (max-width: #{$md-width - 1px}) {
    @content;
  }
}
@mixin media-md-lg {
  @media (min-width: #{$md-width}) and (max-width: #{$lg-width - 1px}) {
    @content;
  }
}


@mixin media ($media-min, $media-max: false) {
     @if $media-max != false {
          @media (min-width: #{$media-min}px) and (max-width: #{$media-max - 1}px) {
            @content;
        }
    }
    @else {
          @media (min-width: #{$media-min}px) {
    @content;
        }
    }
}
